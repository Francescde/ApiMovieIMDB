openapi: 3.0.0
info:
  title: Movie API
  version: 1.0.0
paths:
  /movies:
    get:
      summary: Get a list of movies with sorting, filtering, and pagination
      parameters:
        - name: sort
          in: query
          description: Field to sort the movies by (title, year, rating) default title
          schema:
            type: string
        - name: desc
          in: query
          description: If desc is defined will sort the sort attribute in the opposite way
          schema:
            type: string
        - name: genre
          in: query
          description: Filter movies by category/genre
          schema:
            type: string
        - name: rating_gt
          in: query
          description: Filter movies with a rating greater than the specified value
          schema:
            type: number
        - name: after_id
          in: query
          description: Get movies after the specified movie ID (for keyset pagination)
          schema:
            type: string
        - name: page_size
          in: query
          description: size of the page default 10
          schema:
            type: int
      responses:
        '200':
          description: A list of movies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Movie'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    post:
      summary: Create a new movie
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovieInsert'
      responses:
        '201':
          description: The created movie
  /movies/{id}:
    get:
      summary: Get a specific movie by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The specified movie
        '404':
          description: Movie not found
components:
  schemas:
    Movie:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        genres:
          type: array
          items:
            $ref: '#/components/schemas/Genre'
        year:
          type: integer
        rating:
          type: number
        runtime:
          type: integer
        imdb_link:
          type: string
    MovieInsert:
      type: object
      properties:
        title:
          type: string
        genres:
          type: array
          items:
            $ref: '#/components/schemas/Genre'
        year:
          type: integer
        rating:
          type: number
        runtime:
          type: integer
        imdb_link:
          type: string
    Genre:
      type: object
      properties:
        name:
          type: string
